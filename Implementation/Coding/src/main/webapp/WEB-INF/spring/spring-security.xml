<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
  		http://www.springframework.org/schema/context/spring-context.xsd
  		http://www.springframework.org/schema/security
        https://www.springframework.org/schema/security/spring-security.xsd"> 

	<!-- scan base package to navigate accordingly -->
	<context:component-scan base-package="com.mhs.goodsexchangehinge" />

	<!-- hashing password -->
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- no security to resources -->
	<http pattern="/resources/**" security="none" />

	<http>
		<!-- Permit this uri only to the admin -->
		<intercept-url pattern="/getDashboard/**" access="hasAuthority('ADMIN')" />
		<intercept-url pattern="/user_list/**" access="hasAuthority('ADMIN')" />
		<intercept-url pattern="/category/**" access="hasAuthority('ADMIN')" />
		<intercept-url pattern="/addCategory/**" access="hasAuthority('ADMIN')" />
		<!-- Permit to rest of the user -->
		<intercept-url pattern="/**" access="permitAll" />
		<!-- navigate to login url -->
		<form-login login-page="/login" username-parameter="username"
			password-parameter="password" />
		<!-- access forbidden for unauthorized user -->
		<access-denied-handler error-page="/access-denied" />
		<csrf />
	</http>

	<!-- authenticating user from database -->
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="passwordEncoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,isActive from user_details where username=?"
				authorities-by-username-query="select username,role from user_details where username=?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>